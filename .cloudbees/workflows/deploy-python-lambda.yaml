apiVersion: automation.cloudbees.io/v1alpha1
kind: workflow
name: Deploy Python Lambda

on:
  push:
    branches:
      - main

jobs:
  deploy:
    steps:
    - name: Checkout Repository
      uses: cloudbees-io/checkout@v1

    - name: AWS Login
      uses: cloudbees-io/configure-aws-credentials@v1
      id: aws-login
      with:
        aws-region: us-east-1
        aws-access-key-id: ${{ secrets.ss_aws_access_key_id }}
        aws-secret-access-key: ${{ secrets.ss_aws_secret_access_key }}

    - name: AWS CLI testing
      uses: docker://public.ecr.aws/aws-cli/aws-cli
      id: fetch_latest_file
      shell: bash
      run: |
          set -x
          aws sts get-caller-identity
          aws s3 ls
          LATEST_FILE=$(aws s3 ls s3://lambda-func-deployment/ --recursive | sort | tail -n 1 | awk '{print $4}')
          echo "$LATEST_FILE" >  "$CLOUDBEES_OUTPUTS/latest_zip" 

    
    - name: Check Changed Files
      uses: docker://alpine/git:latest
      run: |
        echo "List of changed files:" 
        echo $(git show --name-only --oneline HEAD)

    - name: Download from Amazon S3
      uses: cloudbees-io/s3-download-object@v1
      with:
          file-path: "lambda-deployment.zip"
          bucket-name: "lambda-func-deployment"
          s3-path: "${{ steps.fetch_latest_file.outputs.latest_zip }}"

    - name: Unzip and copy modified files 
      uses: docker://ubuntu:latest
      shell: bash
      run: |
          apt-get update && apt-get install -y git unzip zip
          unzip -o lambda-deployment.zip -d lambda_env
                    
          modified_py_files=$(git show --name-only --oneline HEAD | tail -n +2 | grep '\.py$')

          if [ -z "$modified_py_files" ]; then
            echo "No .py files to update."
          else

            for file in $modified_py_files; 
              do 
                if [[ "$file" == *.py ]]
                  then
                    mkdir -p lambda_env/$(dirname $file)
                    cp $file lambda_env/$file
                    # Print what you've done with the file
                    echo "Copied $file to lambda_env/$file"
                    echo "Content of $file after copying:"
                    cat lambda_env/$file
                fi
              done
          fi
          

          cd lambda_env
          zip -r ../updated_lambda.zip .
          cd ..

        # Copy only the modified .py files from the commit into the unzipped directory
        # This will maintain their directory structure.


    - name: Upload the modified zip to S3
      uses: cloudbees-io/s3-upload-object@v1
      with:
        file-path: "updated_lambda.zip"
        bucket-name: "lambda-func-deployment"
        s3-path: "lamdba_deployment_new.zip"
    
    - name: Update AWS lambda function 
      id: createOrUpdateLambdaFunctionWithS3
      uses: cloudbees-io/lambda-create-function@v1
      with:
        iam-role-arn: arn:aws:iam::324005994172:role/awslambda-saas
        function-name: lambda-deployment
        package-type: Zip
        handler: lambda_handler
        s3-bucket: lambda-func-deployment
        s3-key: lamdba_deployment_new.zip
        s3-object-version: ""
        architectures: '["x86_64"]'
        runtime: python3.12


    
          
         

    
    

